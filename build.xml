<?xml version="1.0" encoding="utf-8"?>
<!--
    // build without ssl libraries
    ant compile -Dbuild.ssl=true -Dbuild.verbose=true -Dbuild.optimise=true -Dbuild.verbose=false

 -->
<project name="smilkit-as3" basedir="." default="test">
    <description>Build tasks and utilities for SMILKit-as3</description>
    
    <property environment="env" />
    
    <property file="${basedir}/build.properties" />
    
    <property name="build.debug" value="false" />
    <property name="build.optimise" value="true" />
    <property name="build.ssl" value="true" />
    <property name="build.verbose" value="false" />
    
    <property name="flex.path" location="${env.FLEX_HOME}" />
    <property name="flex.headless" value="${env.FLEX_HEADLESS}" />
    
		<property name="root.path" value="${basedir}" />

    <property name="report.path" value="${root.path}/target/report" />
    <property name="report.unit.path" value="${report.path}/unit" />
    <property name="target.path" value="${root.path}/target/bin" />
    <property name="tmp.path" value="${root.path}/target/tmp" />

    <property name="FLEX_HOME" location="${flex.path}" />
    
    <import file="tasks.xml" />
    
    <target name="configuration" description="Setups up configuration for the build.">
			<echo>Compiler Configuration:</echo>
			<echo>- Debug Enabled: ${build.debug}</echo>
			<echo>- Optimise Enabled: ${build.optimise}</echo>
			<echo>- Release Enabled: ${build.release}</echo>
			<echo>- Verbose Enabled: ${build.verbose}</echo>
			<echo></echo>
			<echo>Flag Configuration:</echo>
			<echo>- Debug Enabled: ${build.debug}</echo>
			<echo>- SSL Enabled: ${build.ssl}</echo>
			<echo></echo>
			<echo>Path Configuration:</echo>
			<echo>- Flash SDK: ${flex.path}</echo>
			<echo>- Target Directory: ${target.path}</echo>
			<echo>- Report Directory: ${report.path}</echo>
			<echo>- Temporary Directory: ${tmp.path}</echo>
			
			<mkdir dir="${target.path}" />
			<mkdir dir="${report.path}" />
			<mkdir dir="${report.unit.path}" />
			<mkdir dir="${tmp.path}" />
    </target>
    
    <target name="setup" description="Sets up project dependencies.">
        <antcall target="configuration" />
        <antcall target="smilkit.setup" />
    </target>
    
    <target name="compile" description="Compile's the application into a SWC.">
        <antcall target="configuration" />
        
				<antcall target="smilkit.dependencies" />
        <antcall target="smilkit.compile" />
    </target>
    
    <target name="optimise" description="Optimises the SWC and removes debugger code.">
        <antcall target="smilkit.optimise" />
    </target>
    
    <target name="test" description="Compiles the test application and runs the tests, generating HTML reports.">
        <antcall target="configuration" />
		
		<antcall target="smilkit.dependencies" />
        <antcall target="smilkit.compile.test" />
        
        <taskdef resource="flexUnitTasks.tasks" classpath="${smilkit.libs}/flexUnitTasks-4.1.0_RC2-4.jar" />
        
        <echo>Running tests ...</echo>
        
        <flexunit swf="${target.path}/smilkit-as3-specs.swf" toDir="${report.unit.path}"
				haltonfailure="false" verbose="${build.verbose}" localTrusted="true" headless="${flex.headless}"
				timeout="40000" failureproperty="test.failure" />

        <junitreport todir="${report.unit.path}">
            <fileset dir="${report.unit.path}">
                <include name="TEST-*.xml" />
            </fileset>
        
            <report format="frames" todir="${report.unit.path}/html" />
        </junitreport>
        
        <echo>Finished testing</echo>
    </target>
    
    <target name="clean" description="Cleans the build files and directories.">
        <antcall target="configuration" />
        
        <!-- when running the tests from flex builder, this file is created -->
		<delete file="${main.src.loc}/FlexUnitApplication.mxml" />
		
		<!-- delete flex builder builds -->
		<delete dir="${basedir}/bin" />
		
		<!-- delete target + tmp build directories -->
		<delete dir="${target.path}" />
		<delete dir="${tmp.path}" />
    </target>
    
    <target name="docs" description="Builds the documentation into HTML.">
        <antcall target="configuration" />
        
        <asdoc output="${report.asdocs.loc}" main-title="SMILKit-as3" window-title="SMILKit-as3"
			failonerror="true" fork="true" keep-xml="true" skip-xsl="false">
			
			<doc-sources path-element="${main.src.loc}" />
			<compiler.source-path path-element="${main.src.loc}" />
			
			<!-- <package-description-file>pkg-descriptions.xml</package-description-file> -->
			<!-- <templates-path path-element="${tools.loc}/templates/asdocs" /> -->
		</asdoc>
    </target>
</project>