<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:adobe="http://www.adobe.com/2009/flexUnitUIRunner" width="100%" height="100%" creationComplete="onCreationComplete()" xmlns:flexui="flexunit.flexui.*" >	
	<mx:Script>
		<![CDATA[
			import org.flexunit.listeners.CIListener;
			import org.flexunit.runner.FlexUnitCore;
			import org.flexunit.runner.Request;
			import org.smilkit.spec.SMILKitSuite;
	
			protected var _core:FlexUnitCore;
			
			private function onCreationComplete():void
			{
				this._core = new FlexUnitCore();
				//this._core.addListener(new UIListener(this.uiListener));
				this._core.addListener(new CIListener());
				//this._core.addListener(new FlexCoverListener());
				
				
				// take flashvars for 
				// Request.methods 
				// testsToRun.push(Request.methods(org.smilkit.spec.tests.dom.TimeTestCase,["elementsCanUnresolveWhenResolved"]));
				// testRunner.runWithFlexUnit4Runner(currentRunTestSuite(), "smilkit-as3");

				
				
				
				if (this.parameters.hasOwnProperty("class"))
				{
					var paramClass:String = this.parameters["class"];
					var paramMethods:String = this.parameters["methods"];
					
					if (paramClass != null && paramClass != "")
					{
						var klass:Class = (getDefinitionByName(paramClass) as Class);
						
						if (paramMethods != null && paramMethods != "")
						{
							var methods:Array = paramMethods.split(";");
							
							this._core.runRequest(Request.methods(klass, methods));
						}
						else
						{
							this._core.runRequest(Request.aClass(klass));
						}
					}
					else
					{
						this._core.run(org.smilkit.spec.SMILKitSuite);
					}
				}
				else
				{
					this._core.run(org.smilkit.spec.SMILKitSuite);
				}
			}
	]]>
	</mx:Script>
	<!-- <adobe:TestRunnerBase id="uiListener" width="100%" height="100%"  /> -->
</mx:Application>
